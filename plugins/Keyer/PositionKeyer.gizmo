#! C:/Program Files/Nuke11.0v1/nuke-11.0.1.dll -nx
version 10.0 v4
Gizmo {
 onCreate "
if not locals().get('__positionkeyer_on_create'):
    def __positionkeyer_on_create():
        if not nuke.numvalue('this.__initiated'):
            # in
            n = None
            viewerwindow = nuke.activeViewer()
            if viewerwindow:
                active_input = viewerwindow.activeInput()
                if active_input:
                    n = viewerwindow.node().input(active_input)
            
            layers = nuke.layers(n)
            for layer in ('P', 'depth'):
                if layer in layers:
                    break
            else:
                layer = layers[0]
            nuke.knob('this.in', layer)

        # gl_color
        import colorsys
        import random
        color = colorsys.hsv_to_rgb(random.random(), 0.8, 1)
        color = tuple(int(i * 255) for i in color)
        nuke.thisNode()['gl_color'].setValue(
            color[0] << 24 | color[1] << 16 | color[2] << 8)

        nuke.knob('this.__initiated', 'true')

if not locals().get('__positionkeyer_knob_changed'):
    def __positionkeyer_knob_changed():
        n=nuke.thisNode()
        if nuke.thisKnob() in (n['p0'], n['p1']):
            sampler = n.node('Sampler')
            channels = ('rgba.red', 'rgba.green', 'rgba.blue')
            sampler['p0'].setValue(tuple(sampler.sample(channel, *n['p0'].value()) for channel in channels))
            sampler['p1'].setValue(tuple(sampler.sample(channel, *n['p1'].value()) for channel in channels))

__positionkeyer_on_create()
"
 autolabel "nuke.tcl('return \[string trim \[join \"\[value name] \{\[expr \[expr \[numvalue x]|\[numvalue y]|\[numvalue z]]?\"[value in].\[join \"\[expr \[value x]?\{\[expr \[value invert_x]?\"~x\":\"x\"]\}:\{\}] \[expr \[value y]?\{\[expr \[value invert_y]?\"~y\":\"y\"]\}:\{\}] \[expr \[value z]?\{\[expr \[value invert_z]?\"~z\":\"z\"]\}:\{\}]\" |]\":\"none\"] -> \[value output]\} \{\[python \{nuke.thisNode()\[\\'label\\'].evaluate()\}]\}\" \"\\n\"]]')"
 knobChanged "__positionkeyer_knob_changed()"
 tile_color 0xff00ff
 note_font 微软雅黑
 addUserKnob {20 positionkeyer l "PositionKeyer v1.3.5"}
 addUserKnob {41 in l "sample layer" t "用来取样的图层,一般是P层。但也可以用其他图层(例如depth)" T Shuffle2.in}
 addUserKnob {20 sampler l 取样器 n 1}
 addUserKnob {12 p0}
 p0 {100 300}
 addUserKnob {12 p1}
 p1 {300 100}
 addUserKnob {20 sampler_end n -1}
 addUserKnob {26 div_settings l <b>设置</b>}
 addUserKnob {41 blackpoint l blackpoint(黑点) t 低于此值将为黑色 T Sampler.p0}
 addUserKnob {41 whitepoint l whitepoint(白点) t 高于此值将为白色 T Sampler.p1}
 addUserKnob {7 rotation_x l "rotation x(旋转x轴)" R 0 180}
 addUserKnob {7 rotation l "rotation y(旋转y轴)" R 0 180}
 rotation 90
 addUserKnob {7 rotation_z l "rotation z(旋转z轴)" R 0 180}
 addUserKnob {26 t_alpha_output l output}
 addUserKnob {6 x +STARTLINE}
 x true
 addUserKnob {6 invert_x l invert(反转) -STARTLINE}
 addUserKnob {6 y +STARTLINE}
 addUserKnob {6 invert_y l invert(反转) -STARTLINE}
 addUserKnob {6 z +STARTLINE}
 addUserKnob {6 invert_z l invert(反转) -STARTLINE}
 addUserKnob {41 output l channel T Keyer1.output}
 addUserKnob {41 combine l "" t "决定如何和已有输出通道数据合并:\nreplace:\t替换\nintersect:\t交集\nunion:\t并集" -STARTLINE T Keyer1.combine}
 addUserKnob {20 g_presets l presets(预设) n 1}
 addUserKnob {32 bt_x l X -STARTLINE T "knob x 1\nknob y 0\nknob z 0\nknob invert_x 0\nknob invert_y 0\nknob invert_z 0\nknob rotation 90\nknob rotation_x 0\nknob rotation_z 0"}
 addUserKnob {32 bt_y l Y -STARTLINE T "knob x 0\nknob y 1\nknob z 0\nknob invert_x 0\nknob invert_y 0\nknob invert_z 0\nknob rotation 90\nknob rotation_x 0\nknob rotation_z 0"}
 addUserKnob {32 bt_z l Z -STARTLINE T "knob x 0\nknob y 0\nknob z 1\nknob invert_x 0\nknob invert_y 0\nknob invert_z 0\nknob rotation 90\nknob rotation_x 0\nknob rotation_z 0"}
 addUserKnob {20 endGroup n -1}
 addUserKnob {32 bt_update INVISIBLE +INVISIBLE +STARTLINE}
 addUserKnob {6 __initiated l INVISIBLE +INVISIBLE +STARTLINE}
 __initiated false
}
 Input {
  inputs 0
  name Input
  xpos 180
  ypos -1378
 }
set N366dee00 [stack 0]
 Shuffle {
  in rgba
  name Shuffle2
  xpos 180
  ypos -1308
 }
 NoOp {
  name Sampler
  label 取样器
  xpos 180
  ypos -1270
  addUserKnob {20 Result}
  addUserKnob {18 p0 l "point 0"}
  p0 {0 0 0}
  addUserKnob {18 p1 l "point 1"}
  p1 {0 0 0}
 }
 BlinkScript {
  recompileCount 51
  ProgramGroup 1
  KernelDescription "2 \"PositionKeyer\" iterate pixelWise ee6e9b933da380ff164e65e7c7e9d8f402fa426d9298c6d74394c02f146f67c7 2 \"position\" Read Point \"dst\" Write Point 9 \"invert_x\" Bool 1 AA== \"invert_y\" Bool 1 AA== \"invert_z\" Bool 1 AA== \"enable_x\" Bool 1 AA== \"enable_y\" Bool 1 AA== \"enable_z\" Bool 1 AA== \"rotate\" Float 3 AAAAAAAAAAAAAAAAAAAAAA== \"p0_color\" Float 4 AAAAAAAAAAAAAAAAAAAAAA== \"p1_color\" Float 4 AAAAAAAAAAAAAAAAAAAAAA== 9 \"invert_x\" 1 1 \"invert_y\" 1 1 \"invert_z\" 1 1 \"enable_x\" 1 1 \"enable_y\" 1 1 \"enable_z\" 1 1 \"rotate\" 3 1 \"p0_color\" 4 1 \"p1_color\" 4 1 2 \"p0\" Float 4 1 AAAAAAAAAAAAAAAAAAAAAA== \"p1\" Float 4 1 AAAAAAAAAAAAAAAAAAAAAA=="
  kernelSource "// PositionKeyerKernel\n// VERSION: 0.4.4\nkernel PositionKeyer : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> position;\n  Image<eWrite, eAccessPoint> dst;\n\nparam:\n  bool invert_x;\n  bool invert_y;\n  bool invert_z;\n  bool enable_x;\n  bool enable_y;\n  bool enable_z;\n  float3 rotate;\n  float4 p0_color;\n  float4 p1_color;\n\nlocal:\n  float4 p0;\n  float4 p1;\n\n  float4 rotate3(float4 point, float3 rotate)\n  \{\n    float sx = sin(rotate.x);\n    float cx = cos(rotate.x);\n    float sy = sin(rotate.y);\n    float cy = cos(rotate.y);\n    float sz = sin(rotate.z);\n    float cz = cos(rotate.z);\n    float xy, xz, yx, yz, zx, zy;\n    xy = cx * point.y - sx * point.z;\n    xz = sx * point.y + cx * point.z;\n    yx = cy * point.x - sy * xz;\n    yz = sy * point.x + cy * xz;\n    zx = cz * yx - sz * xy;\n    zy = sz * yx + cz * xy;\n    point.x = zx;\n    point.y = zy;\n    point.z = yz;\n    return point;\n  \}\n\n  float linear(float x, float p0, float p1)\n  \{\n    if (p1 == p0)\{\n      return p0;\n    \}\n    return (x - p0) / (p1 - p0);\n  \}\n\n  void init()\n  \{\n    p0 = rotate3(p0_color, rotate);\n    p1 = rotate3(p1_color, rotate);\n  \}\n\n  void process()\n  \{\n    float4 pos = rotate3(position(), rotate);\n\n    float4 result;\n    result\[0] = linear(pos\[0], p0\[0], p1\[0]);\n    result\[1] = linear(pos\[1], p0\[1], p1\[1]);\n    result\[2] = linear(pos\[2], p0\[2], p1\[2]);\n    result = clamp(result, float4(0.0f), float4(1.0f));\n\n    result\[0] = invert_x ? (1 - result\[0]) : result\[0];\n    result\[1] = invert_y ? (1 - result\[1]) : result\[1];\n    result\[2] = invert_z ? (1 - result\[2]) : result\[2];\n    result\[3] = (enable_x ? result\[0] : 1) * (enable_y ? result\[1] : 1) * (enable_z ? result\[2] : 1);\n\n    dst() = result;\n  \}\n\};"
  useGPUIfAvailable false
  vectorize false
  rebuild ""
  PositionKeyer_invert_x {{parent.invert_x}}
  PositionKeyer_invert_y {{parent.invert_y}}
  PositionKeyer_invert_z {{parent.invert_z}}
  PositionKeyer_enable_x {{parent.x}}
  PositionKeyer_enable_y {{parent.y}}
  PositionKeyer_enable_z {{parent.z}}
  PositionKeyer_rotate {{radians(parent.knob.rotation_x)} {"radians(parent.knob.rotation - 90)"} {radians(parent.knob.rotation_z)}}
  PositionKeyer_p0_color {{parent.Sampler.p0} {parent.Sampler.p0} {parent.Sampler.p0} {parent.Sampler.p0}}
  PositionKeyer_p1_color {{parent.Sampler.p1} {parent.Sampler.p1} {parent.Sampler.p1} {parent.Sampler.p1}}
  protectKernelWhenPublishing true
  rebuild_finalise ""
  name BlinkScript1
  selected true
  xpos 180
  ypos -1218
 }
set N366de380 [stack 0]
 Dot {
  name Dot2
  xpos 544
  ypos -1374
  hide_input true
 }
push $N366dee00
push $N366dee00
 Copy {
  inputs 2
  from0 {{{parent.Keyer1.output}}}
  to0 rgba.alpha
  name Copy2
  xpos 290
  ypos -1308
 }
set N3672dc00 [stack 0]
 ChannelMerge {
  inputs 2
  name ChannelMerge2
  xpos 510
  ypos -1329
 }
push $N366de380
 Dot {
  name Dot1
  xpos 434
  ypos -1374
  hide_input true
 }
push $N3672dc00
 ChannelMerge {
  inputs 2
  operation in
  name ChannelMerge1
  xpos 400
  ypos -1226
 }
push $N366de380
 Switch {
  inputs 3
  which {{parent.combine}}
  name Switch1
  xpos 510
  ypos -1210
 }
set N3672ce00 [stack 0]
push $N3672ce00
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 {{{parent.Keyer1.output}}}
  name Copy1
  xpos 510
  ypos -1182
 }
 Output {
  name Output1
  xpos 510
  ypos -1138
 }
 Keyer {
  inputs 0
  operation "luminance key"
  name Keyer1
  xpos 70
  ypos -1395
 }
end_group
