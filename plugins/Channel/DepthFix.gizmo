#! C:/Program Files/Nuke10.0v4/nuke-10.0.4.dll -nx
version 10.0 v4
Gizmo {
 tile_color 0x823a7dff
 onCreate "if '__depthfix_autolabel' not in locals():\n    def __depthfix_autolabel():\n        depth_channel = nuke.value('this.depth_channel')\n        by_channel = nuke.value('this.by')\n        \n        ret = [nuke.value('this.name')]\n        if by_channel != 'alpha':\n            channel = '({} / {})'.format(\n                depth_channel,\n                by_channel)\n        elif depth_channel != 'depth.Z':\n            channel = '({})'.format(depth_channel)\n        else:\n            channel = None\n        \n        closepoint = nuke.value('this.closepoint')\n        farpoint = nuke.value('this.farpoint')\n        if closepoint != '0' or farpoint != '1':\n            range = '[{}~{}]'.format(closepoint, farpoint)\n        else:\n            range = None\n            \n        size = nuke.value('this.size')\n        default = nuke.value('this.empty_area_depth')\n        erode = nuke.numvalue('this.erode_size')\n        info = ['*{}'.format(size) if size != '1' else None,\n            '#{}'.format(default) if default != '1' else None,\n            '{:+1.0f}'.format(erode) if erode!=0.0 else None]\n        info = ' '.join(i for i in info if i)\n        label = nuke.thisNode()['label'].evaluate()\n        \n        ret = list(i for i in [\n            nuke.value('this.name'),\n            range,\n            info,\n            channel,\n            label] if i)\n        ret = '\\n'.join(ret)\n        return ret\n"
 autolabel "__depthfix_autolabel()"
 note_font Verdana
 addUserKnob {20 tab1 l "DepthFix v3.6.9"}
 addUserKnob {41 depth_channel l "depth(深度通道)" T Copy2.from0}
 addUserKnob {7 closepoint l "closepoint(近点)" t 代表最近处的深度数值}
 addUserKnob {7 farpoint l "farpoint(远点)" t 代表最远处的深度数值}
 farpoint 1
 addUserKnob {41 by l "by(以此修复)" t 用此通道修复深度通道 T Copy1.from0}
 addUserKnob {7 threshold l "threshold(阈值)" t alpha小于此值的像素的depth.z值会在处理过程中被忽略}
 threshold 0.95
 addUserKnob {7 size l "size(强度)" t 用于修正的收边系数 R 0 10}
 size 1
 addUserKnob {7 minZ l min t 低于此值的深度会被设为此值}
 addUserKnob {7 maxZ l max t 高于此值的深度会被设为此值}
 maxZ 1
 addUserKnob {4 empty_area_depth l "default(默认值)" t alpha为0的区域使用的值 M {0 1 original}}
 empty_area_depth 1
 addUserKnob {3 erode_size l "erode(收边)" t 在深度上进行的收边}
}
 Input {
  inputs 0
  name Input
  xpos 400
  ypos -754
 }
 Dot {
  name Dot2
  xpos 434
  ypos -702
 }
set N3d5e400 [stack 0]
push $N3d5e400
 Copy {
  inputs 2
  from0 depth.Z
  to0 depth.Z
  name Copy2
  xpos 510
  ypos -715
  disable {{"! parent.Switch1.which"}}
 }
 Grade {
  channels {none none none depth.Z}
  blackpoint {{parent.closepoint}}
  whitepoint {{parent.farpoint}}
  name Grade1
  xpos 510
  ypos -667
 }
 Dot {
  name Dot3
  xpos 544
  ypos -606
 }
set N3d5f800 [stack 0]
 Dot {
  name Dot1
  xpos 654
  ypos -606
 }
 AddChannels {
  channels alpha
  color 1
  name AddChannels1
  xpos 620
  ypos -571
 }
set N34c47800 [stack 0]
push $N34c47800
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy1
  xpos 620
  ypos -523
 }
 Dot {
  name Dot20
  xpos 654
  ypos -486
 }
set N34c47000 [stack 0]
 Dot {
  name Dot17
  xpos 764
  ypos -486
 }
 Expression {
  channel0 alpha
  expr0 "(a < 1 && a > 0) ? 1 : 0"
  name Expression6
  xpos 730
  ypos -395
 }
 Dot {
  name Dot13
  xpos 764
  ypos -246
 }
push $N34c47000
 Dilate {
  channels depth
  size 2
  name Dilate2
  xpos 620
  ypos -451
 }
 Expression {
  channel0 depth
  expr0 "(a < parent.threshold) ? 1 : z"
  name Expression5
  xpos 620
  ypos -395
 }
 Dilate {
  channels depth
  size {{-width*parent.size/100}}
  name Dilate1
  xpos 620
  ypos -352
 }
 Dot {
  name Dot11
  xpos 654
  ypos -294
 }
push $N3d5f800
 ChannelMerge {
  inputs 2+1
  A depth.Z
  operation min
  B depth.Z
  output depth.Z
  bbox B
  name ChannelMerge1
  xpos 510
  ypos -263
 }
 Expression {
  channel0 depth
  expr0 "(a == 0) ? parent.empty_area_depth : z"
  name Expression1
  xpos 510
  ypos -178
  disable {{"parent.empty_area_depth == 2"}}
 }
 Expression {
  channel0 depth
  expr0 (z<=parent.minZ)?parent.minZ:((z>parent.maxZ)?parent.maxZ:z)
  channel1 none
  name Expression4
  xpos 510
  ypos -137
 }
 Dilate {
  channels depth
  size {{parent.erode_size}}
  name Dilate3
  xpos 510
  ypos -109
 }
set N34c9f800 [stack 0]
 Viewer {
  frame_range 100-100
  fps 25
  input_process false
  name Viewer1
  xpos 621
  ypos 60
 }
push $N34c9f800
 Dot {
  name Dot4
  xpos 544
  ypos -54
 }
push $N3d5e400
 Switch {
  inputs 2
  which {{"\[string match *\[value parent.depth_channel]* \[channels parent.Input]]\n"}}
  name Switch1
  xpos 400
  ypos -59
 }
 Output {
  name Output1
  xpos 400
  ypos 89
 }
end_group
