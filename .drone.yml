---
kind: pipeline
name: nuke10.0v4

steps:
  - name: test
    image: natescarlet/nuke:10.0v4
    environment:
      PIP_NO_BUILD_ISOLATION: false
      PYTHON_PATH: "/drone/src/lib"
      foundry_LICENSE:
        from_secret: foundry_LICENSE
    commands:
      - sudo chown -R nuke:nuke  .
      # https://github.com/python-poetry/poetry/issues/2600
      # https://github.com/python-poetry/poetry/issues/2711
      - sudo -EH pip install -U pip poetry==1.1.0b2
      - make test
---
kind: pipeline
name: nuke10.5v7

steps:
  - name: test
    image: natescarlet/nuke:10.5v7
    environment:
      PIP_NO_BUILD_ISOLATION: false
      foundry_LICENSE:
        from_secret: foundry_LICENSE
    commands:
      - sudo chown -R nuke:nuke  .
      - sudo -EH pip install -U pip poetry==1.1.0b2
      - make test
---
kind: pipeline
name: nuke:latest

steps:
  - name: test
    image: natescarlet/nuke:latest
    environment:
      PIP_NO_BUILD_ISOLATION: false
      foundry_LICENSE:
        from_secret: foundry_LICENSE
    commands:
      - sudo chown -R nuke:nuke  .
      - sudo -EH pip install -U pip poetry==1.1.0b2
      - make test
---
kind: pipeline
name: docs

steps:
  - name: build
    image: natescarlet/nuke:10.5v7
    environment:
      PIP_NO_BUILD_ISOLATION: false
      foundry_LICENSE:
        from_secret: foundry_LICENSE
    commands:
      - sudo chown -R nuke:nuke  .
      - sudo -EH pip install -U pip poetry==1.1.0b2
      - make docs/build/html
  - name: deploy to github
    image: natescarlet/nuke:10.5v7
    environment:
      GITHUB_DEPLOY_KEY:
        from_secret: GITHUB_DEPLOY_KEY
    commands:
      - mkdir ~/.ssh/
      - echo "$${GITHUB_DEPLOY_KEY}" > ~/.ssh/id_rsa
      - |-
        if [ -n "$SSH_PROXY" ]; then
          sudo sed -i "s@http://.\+\.debian\.org/debian@http://mirrors.huaweicloud.com/debian@g" /etc/apt/sources.list
          sudo apt-get update
          sudo apt-get -y install connect-proxy
          echo "ProxyCommand connect -H $SSH_PROXY %h %p" > ~/.ssh/config
        fi
      - chmod 600 ~/.ssh/id_rsa
      - "cp ./scripts/known_hosts ~/.ssh/"
      - chmod 644 ~/.ssh/known_hosts
      - git config --global user.name 'CI User'
      - git config --global user.email '<>'
      - cd docs/build/html
      - if [ -z "$(git status -s)" ];then exit 0; fi
      - git checkout --orphan temp-${DRONE_COMMIT_SHA}
      - git add --all
      - "git commit -m 'docs: build' -m '[skip ci]'"
      - git push -f git@github.com:WuLiFang/Nuke.git temp-${DRONE_COMMIT_SHA}:gh-pages
      - git push -f ${DRONE_GIT_SSH_URL} temp-${DRONE_COMMIT_SHA}:gh-pages
    when:
      branch:
        - master
---
kind: pipeline
name: notification

clone:
  disable: true

steps:
  - name: rocket-chat
    image: mike1pol/drone-rocket
    settings:
      url:
        from_secret: ROCKETCHAT_URL
      user_id:
        from_secret: ROCKETCHAT_USER_ID
      token:
        from_secret: ROCKETCHAT_TOKEN
      channel:
        from_secret: ROCKETCHAT_CHANNEL
      message:
        "**{{ build.status }}** {{ repo.fullName }}[#{{ build.number }}]({{ build.link }}) ({{ build.event }})

        [{{ truncate build.commit 8 }}](${DRONE_COMMIT_LINK}) on `{{ build.branch }}` by _{{ build.author }}_

        {{build.message}}"
depends_on:
  - nuke10.0v4
  - nuke10.5v7
  - nuke:latest
  - docs
trigger:
  status:
    - success
    - failure
