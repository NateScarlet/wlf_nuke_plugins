# -*- coding=UTF-8 -*-
# This typing file was generated by typing_from_help.py
"""
Qt - Minimal Python 2 & 3 shim around all Qt bindings
"""

import six
import typing

"""
DOCUMENTATION
    Qt.py was born in the film and visual effects industry to address
    the growing need for the development of software capable of running
    with more than one flavour of the Qt bindings for Python - PySide,
    PySide2, PyQt4 and PyQt5.

    1. Build for one, run with all
    2. Explicit is better than implicit
    3. Support co-existence

    Default resolution order:
        - PySide2
        - PyQt5
        - PySide
        - PyQt4

    Usage:
        >> import sys
        >> from Qt import QtWidgets
        >> app = QtWidgets.QApplication(sys.argv)
        >> button = QtWidgets.QPushButton("Hello World")
        >> button.show()
        >> app.exec_()

    All members of PySide2 are mapped from other bindings, should they exist.
    If no equivalent member exist, it is excluded from Qt.py and inaccessible.
    The idea is to highlight members that exist across all supported binding,
    and guarantee that code that runs on one binding runs on all others.

    For more details, visit https://github.com/mottosso/Qt.py

LICENSE

    See end of file for license (MIT, BSD) information.
"""
from . import QtCore
from . import QtGui
from . import QtHelp
from . import QtMultimedia
from . import QtNetwork
from . import QtOpenGL
from . import QtPrintSupport
from . import QtSql
from . import QtSvg
from . import QtTest
from . import QtWidgets
from . import QtXml
from . import QtXmlPatterns
__all__: ...

__binding__: six.binary_type

__binding_version__: six.binary_type

__qt_version__: six.binary_type

__version__: six.binary_type

# version: 1.1.0
