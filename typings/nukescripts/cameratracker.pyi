"""
This type stub file was generated by pyright.
"""

import nuke
import nukescripts

"""Functions used by the CameraTracker node"""
def populateExportMenu(cameraTracker):
  """Populate the export menu on a CameraTracker node."""
  ...

def populateFilmBackPresets(cameraTracker):
  """Populate the film back presets menu on a CameraTracker node."""
  ...

def createCamera(solver):
  """Create a camera node based on the projection calculated by the solver."""
  ...

def createCameraRig(solver):
  """Create a multi-view rig with a camera per view."""
  ...

def createCameraSet(solver):
  """Create a set of Cameras, one Camera per solved frame."""
  ...

def createScene(cameraTracker):
  """Create a Scene with a Camera and PointCloud for the camera solve."""
  ...

def createEverything(cameraTracker):
  """Create a Scene with a Camera, PointCloud, ScanlineRender, and LensDistortion (Undistort) node."""
  ...

def createPointCloud(cameraTracker):
  """Create a CameraTrackerPointCloud node."""
  ...

def createLensDistortion(cameraTracker):
  ...

def createUndistortion(cameraTracker):
  ...

def createCards(solver):
  ...

def setKnobToPreset(cameraTracker, selectedPresetIdx):
  """Finds the index of the preset knob and sets the film back size knob accordingly."""
  ...

def cameratrackerCreateCallback():
  ...

if not nuke.env['assist']:
  ...
class LinkableImportPanel(nukescripts.PythonPanel):
  """
    Modal dialog for selecting a Linkable node in the script.

    The following class creates a modal dialog with one UI element: an enum of nodes
    that derive from the LinkableI class. (The LinkableI interface allows us to easily query and import
    2D data from a variety of sources, particularly the Tracker node.) The user then selects their source node
    to import the data from. Once Ok'ed, the code below creates a new user track for each LinkableInfo object
    returned in the node.linkableKnobs() function with an XY co-ordinate, and then copies each animation curve
    entry.
    """
  def __init__(self) -> None:
    ...
  
  def showModalDialog(self, dstNode):
    ...
  


def importTracker(cameraTracker):
  """Import data from a Tracker node into the CameraTracker node."""
  ...

def exportTracker(cameraTracker):
  """Export data from the CameraTracker node into a Tracker node."""
  ...

def importTracks(cameraTracker):
  """Utility function that collects the filename to be used in importing tracks from a Shake formatted file."""
  ...

def exportTracks(cameraTracker):
  """Utility function that collects the filename to be used in exporting tracks from a Shake formatted file."""
  ...

